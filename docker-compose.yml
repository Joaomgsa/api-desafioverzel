
services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - 'POSTGRES_DB=db_desafio'
      - 'POSTGRES_PASSWORD=123456'
      - 'POSTGRES_USER=postgres'
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
  
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-verzel
    
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_OPEN_IN_VIEW: true
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      JWT_PRIVATE_KEY: classpath:app.key
      JWT_PUBLIC_KEY: classpath:app.pub
    depends_on:
      - db
    networks:
      - 'app-network'
  
networks:
  app-network:
    driver: bridge
volumes:
  postgres-data: